name: "deploy to CloudRun"

on:
  push:
    branches:
      - main
    paths-ignore:
      - .git
      - .gitignore
      - .github/CODEOWNERS
      - LICENSE
      - README.md
      - __tests__/**

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  id-token: write
  packages: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: kaminari-cloudrun

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ vars.SERVICE_ACCOUNT }}

      - name: Configure Docker
        run: gcloud auth configure-docker asia-northeast1-docker.pkg.dev

      - name: Restoring and saving next build cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-

      - name: Build Docker Image to the builder stage
        run: |
          docker buildx build --target builder --progress=plain \
           -t app:builder .

      - name: Build and Push Docker Image to Artifact Registry
        run: |
          docker buildx build --progress=plain \
           -t asia-northeast1-docker.pkg.dev/${{ vars.gcp_project_id }}/kaminari/app:${{ github.sha }} . \
          docker push asia-northeast1-docker.pkg.dev/${{ vars.gcp_project_id }}/kaminari/app:${{ github.sha }}

      - name: Copy .next/cache folder from image
        run: |
          docker create --name tmp-app app:builder
          mkdir -p ${{ github.workspace }}/.next
          docker cp tmp-app:/app/kaminari/.next/cache ${{ github.workspace }}/.next
          docker rm tmp-app

      - name: tmp
        run: |
          ls -a ${{ github.workspace }}/.next/cache

      - name: Deploy to Cloud Run
        run: |
          rollbackTargetRevision=$(gcloud run services describe kaminari \
                                    --region=asia-northeast1 \
                                    --project="${{ vars.gcp_project_id }}" \
                                    --format=json | jq -r '.status.traffic[] | select(.percent == 100) | .revisionName')

          gcloud run deploy kaminari \
            --image asia-northeast1-docker.pkg.dev/${{ vars.gcp_project_id }}/kaminari/app:${{ github.sha }} \
            --region asia-northeast1 \
            --project ${{ vars.gcp_project_id }} \
            --update-labels=rollback-target-revision=$rollbackTargetRevision && \
          gcloud run services update-traffic kaminari --region asia-northeast1 --to-latest
